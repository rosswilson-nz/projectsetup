######################
### Initial set-up ###
######################

library(targets)
library(tarchetypes)
options(tidyverse.quiet = TRUE)

# Set options
tar_option_set(
  packages = c("tidyverse"), # add other required packages in here
  format = "qs",
  error = "trim",
  memory = "transient",
  garbage_collection = TRUE,
  workspace_on_error = TRUE
)

# Define analysis configuration parameters etc
source("_config.R")

# Load functions
tar_source()

##########################################################
### For parallel (or distributed) computing (optional) ###
##########################################################

# See https://books.ropensci.org/targets/crew.html for further discussion
# Uses environment variables set in project `.Renviron` file

if (is.na(as.logical(Sys.getenv("TAR_PARALLEL")))) {
  rlang::inform(
    paste(
      "Consider using {crew} and setting envvar 'TAR_PARALLEL = true' to use parallel processing",
      "of targets"
    ),
    .frequency = "once",
    .frequency_id = "use_crew"
  )
} else if (as.logical(Sys.getenv("TAR_PARALLEL")) && rlang::is_installed("crew")) {
  tar_option_set(
    controller = crew::crew_controller_local(
      workers = min(parallel::detectCores() - 1, as.integer(Sys.getenv("TAR_CORES")))
    )
  )
} else if (as.logical(Sys.getenv("TAR_PARALLEL"))) {
  rlang::abort("Install {crew} to use parallel processing of targets")
}

######################
### Define targets ###
######################

source("_plan.R")
# Or define targets directly in here (`targets <- list(...)`)

################################
### End with list of targets ###
################################

list(targets)
